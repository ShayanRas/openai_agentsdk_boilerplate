# Chainlit Frontend Dockerfile - Production optimized
FROM python:3.11-slim

# Set environment variables for Python
ENV PYTHONDONTWRITEBYTECODE 1
ENV PYTHONUNBUFFERED 1

# Install Node.js for MCP servers
RUN apt-get update && apt-get install -y \
    curl \
    && curl -fsSL https://deb.nodesource.com/setup_18.x | bash - \
    && apt-get install -y nodejs \
    && rm -rf /var/lib/apt/lists/*

# Set the working directory in the container
WORKDIR /app

# Install MCP Everything server globally
RUN npm install -g @modelcontextprotocol/server-everything

# Copy the requirements file for the Chainlit service
COPY requirements.chainlit.txt .

# Install Python dependencies
RUN pip install --no-cache-dir -r requirements.chainlit.txt

# Copy the Chainlit application files
COPY src/chainlit_app.py .
COPY schema.prisma .
COPY src/init_db.py .

# Create .chainlit directory for config
RUN mkdir -p .chainlit

# Copy config file
COPY .chainlit/config.toml .chainlit/

# Generate Prisma client at build time to save memory at runtime
RUN python -m prisma generate

# Expose port for Chainlit (default is 8000, but we'll use 8002)
EXPOSE 8002

# Initialize database and run Chainlit
# -h flag prevents browser from opening server-side
# --host 0.0.0.0 makes it accessible from outside container
# --port 8002 to avoid conflicts with MCP server
CMD python init_db.py && chainlit run chainlit_app.py -h --host 0.0.0.0 --port 8002